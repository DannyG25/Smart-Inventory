{
    "swagger": "2.0",
    "info": {
        "description": "A Tag service API in Go using Gin framework",
        "title": "Tag Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/categories": {
            "get": {
                "description": "Return list of categories.",
                "tags": [
                    "categories"
                ],
                "summary": "Get All categories.",
                "responses": {
                    "200": {
                        "description": "Categories successfully recovered."
                    }
                }
            },
            "put": {
                "description": "Update categories data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update categories",
                "parameters": [
                    {
                        "description": "Update tags",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.UpdateCategoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/category.UpdateCategoryBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save categories data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create categories",
                "parameters": [
                    {
                        "description": "Create categorys",
                        "name": "categories",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.AddCategoryBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created category.",
                        "schema": {
                            "$ref": "#/definitions/category.AddCategoryBody"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Return the category whose catId value matches id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get Single Categories by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get categories by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found successfully."
                    }
                }
            },
            "delete": {
                "description": "Remove categories data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get categorys by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully erased."
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "description": "Return list of companies.",
                "tags": [
                    "companies"
                ],
                "summary": "Get All companies.",
                "responses": {
                    "200": {
                        "description": "Companies successfully recovered."
                    }
                }
            },
            "put": {
                "description": "Update companies data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Update companies",
                "parameters": [
                    {
                        "description": "Update tags",
                        "name": "companies",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.UpdateCompanyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/company.UpdateCompanyBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save companies data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Create companies",
                "parameters": [
                    {
                        "description": "Create companies",
                        "name": "companies",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.AddCompanyBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created company.",
                        "schema": {
                            "$ref": "#/definitions/company.AddCompanyBody"
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "description": "Return the company whose marId value matches id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Get Single Companies by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get companies by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company found successfully."
                    }
                }
            },
            "delete": {
                "description": "Remove companies data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companies"
                ],
                "summary": "Delete companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get companies by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company successfully erased."
                    }
                }
            }
        },
        "/marks": {
            "get": {
                "description": "Return list of marks.",
                "tags": [
                    "marks"
                ],
                "summary": "Get All marks.",
                "responses": {
                    "200": {
                        "description": "Marks successfully recovered."
                    }
                }
            },
            "put": {
                "description": "Update marks data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "marks"
                ],
                "summary": "Update marks",
                "parameters": [
                    {
                        "description": "Update marks",
                        "name": "marks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mark.UpdateMarkBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mark updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/mark.UpdateMarkBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save marks data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "marks"
                ],
                "summary": "Create marks",
                "parameters": [
                    {
                        "description": "Create marks",
                        "name": "marks",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mark.AddMarkBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created mark.",
                        "schema": {
                            "$ref": "#/definitions/mark.AddMarkBody"
                        }
                    }
                }
            }
        },
        "/marks/{id}": {
            "get": {
                "description": "Return the mark whose marId value matches id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "marks"
                ],
                "summary": "Get Single Marks by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get marks by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mark found successfully."
                    }
                }
            },
            "delete": {
                "description": "Remove marks data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "marks"
                ],
                "summary": "Delete marks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get marks by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mark successfully erased."
                    }
                }
            }
        },
        "/products": {
            "put": {
                "description": "Update products data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update products",
                "parameters": [
                    {
                        "description": "Update tags",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProductBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProductBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save products data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create products",
                "parameters": [
                    {
                        "description": "Create products",
                        "name": "products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.AddProductBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created product.",
                        "schema": {
                            "$ref": "#/definitions/product.AddProductBody"
                        }
                    }
                }
            }
        },
        "/taxs": {
            "get": {
                "description": "Return list of taxs.",
                "tags": [
                    "taxs"
                ],
                "summary": "Get All taxs.",
                "responses": {
                    "200": {
                        "description": "Taxs successfully recovered."
                    }
                }
            },
            "put": {
                "description": "Update taxs data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxs"
                ],
                "summary": "Update taxs",
                "parameters": [
                    {
                        "description": "Update tags",
                        "name": "taxs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tax.UpdateTaxBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/tax.UpdateTaxBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save taxs data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxs"
                ],
                "summary": "Create taxs",
                "parameters": [
                    {
                        "description": "Create taxs",
                        "name": "taxs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tax.AddTaxBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created tax.",
                        "schema": {
                            "$ref": "#/definitions/tax.AddTaxBody"
                        }
                    }
                }
            }
        },
        "/taxs/{id}": {
            "get": {
                "description": "Return the tax whose taxId value matches id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxs"
                ],
                "summary": "Get Single Taxs by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get taxs by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax found successfully."
                    }
                }
            },
            "delete": {
                "description": "Remove taxs data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taxs"
                ],
                "summary": "Delete taxs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get taxs by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax successfully erased."
                    }
                }
            }
        },
        "/unit_measures": {
            "get": {
                "description": "Return list of unit_measures.",
                "tags": [
                    "unit_measures"
                ],
                "summary": "Get All unit_measures.",
                "responses": {
                    "200": {
                        "description": "Unit_Measures successfully recovered."
                    }
                }
            },
            "put": {
                "description": "Update unit_measures data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit_measures"
                ],
                "summary": "Update unit_measures",
                "parameters": [
                    {
                        "description": "Update tags",
                        "name": "unit_measures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/unit_measure.UpdateUnit_MeasureBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit_Measure updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/unit_measure.UpdateUnit_MeasureBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Save unit_measures data in Db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit_measures"
                ],
                "summary": "Create unit_measures",
                "parameters": [
                    {
                        "description": "Create unit_measures",
                        "name": "unit_measures",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/unit_measure.AddUnit_MeasureBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created unit_measure.",
                        "schema": {
                            "$ref": "#/definitions/unit_measure.AddUnit_MeasureBody"
                        }
                    }
                }
            }
        },
        "/unit_measures/{id}": {
            "get": {
                "description": "Return the unit_measure whose uniId value matches id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit_measures"
                ],
                "summary": "Get Single Unit_Measures by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get unit_Measures by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit_Measure found successfully."
                    }
                }
            },
            "delete": {
                "description": "Remove unit_measures data by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "unit_measures"
                ],
                "summary": "Delete unit_measures",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get unit_measures by id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unit_Measure successfully erased."
                    }
                }
            }
        }
    },
    "definitions": {
        "category.AddCategoryBody": {
            "type": "object",
            "properties": {
                "cat_name": {
                    "type": "string"
                }
            }
        },
        "category.UpdateCategoryBody": {
            "type": "object",
            "properties": {
                "cat_name": {
                    "type": "string"
                }
            }
        },
        "company.AddCompanyBody": {
            "type": "object"
        },
        "company.UpdateCompanyBody": {
            "type": "object"
        },
        "mark.AddMarkBody": {
            "type": "object",
            "properties": {
                "mar_name": {
                    "type": "string"
                }
            }
        },
        "mark.UpdateMarkBody": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mar_name": {
                    "type": "string"
                }
            }
        },
        "product.AddProductBody": {
            "type": "object"
        },
        "product.UpdateProductBody": {
            "type": "object"
        },
        "tax.AddTaxBody": {
            "type": "object"
        },
        "tax.UpdateTaxBody": {
            "type": "object"
        },
        "unit_measure.AddUnit_MeasureBody": {
            "type": "object"
        },
        "unit_measure.UpdateUnit_MeasureBody": {
            "type": "object"
        }
    }
}